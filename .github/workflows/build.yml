name: Building, CI Even

on:
  workflow_dispatch:
  push:
    branches:
    - "cmake"
    tags:
    - "version-*"

env:
  CMAKE_BUILD_TYPE: Debug
  IMGUI_VERSION: v1.88
  GLFW_VERSION: v3.3.8
  GLM_VERSION: v0.9.9.8

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Apt - Install uncompileable dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install --no-install-recommends -y libglfw3-dev libcdd-dev libglm-dev

    - name: Cache - ImGui from source
      id: cache-imgui
      uses: actions/cache@v3.0.11
      with:
        key: version-1.88
        path: thirdparty/imgui

    # Could also just use CMake for downloading the archives, but cache is still needed
    - name: Retrieve - ImGui from source
      if: ${{ steps.cache-imgui.outputs.cache-hit != 'true' }}
      run: |
        curl -sSL https://github.com/ocornut/imgui/archive/refs/tags/v1.88.zip -o /tmp/imgui.zip
        unzip /tmp/imgui.zip -d ./thirdparty
        mv ./thirdparty/imgui-1.88 ./thirdparty/imgui

    # Shamelessly borrowed from an example CMake action. Probably better than I could've done myself
    # ..evidently
    - name: CMake - Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}}
    - name: CMake - Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Tar - Package artifact
      run: |
        cmake --install ${{github.workspace}}/build
        tar -cvf ${{github.workspace}}/dist-linux.tar -C ${{github.workspace}} ./dist
    - name: Actions - Emit artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-linux
        path: ${{github.workspace}}/dist-linux.tar

  # cache-dependencies:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Cache - Windows uncompileable dependencies
  #     id: cache-windows-thirdparty
  #     uses: actions/cache@v3.0.11
  #     with:
  #       key: thirdparty-imgui${{ env.IMGUI_VERSION }}-glfw${{ env.GLFW_VERSION }}-glm${{ env.GLM_VERSION }}
  #       path: |
  #         thirdparty/touches
  #         thirdparty/GLFW
  #         thirdparty/glm
  #         thirdparty/imgui
  #         libraries/

  #   - name: CMake - configure dependencies
  #     run: cmake -B ${{github.workspace}}\deps -S ${{github.workspace}}\thirdparty\cache-win32

  # This one will be ran only on non-snapshot builds, since it's slower and more of a PITA
  build-windows:
    runs-on: windows-latest
    if: ${{ !endsWith(github.ref_name, 'snapshot') }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache - Windows uncompileable dependencies
      id: cache-windows-thirdparty
      uses: actions/cache@v3.0.11
      with:
        key: thirdparty-imgui${{ env.IMGUI_VERSION }}-glfw${{ env.GLFW_VERSION }}-glm${{ env.GLM_VERSION }}
        path: |
          thirdparty/touches
          thirdparty/GLFW
          thirdparty/glm
          thirdparty/imgui
          libraries/

    - name: CMake - Configure
      run: cmake -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DUSE_CDDLIB=off
    - name: CMake - Build
      run: |
        cmake --build ${{github.workspace}}\build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: CommandLine - Look around
      run: tree ${{github.workspace}}\build /F

    - name: Actions - Emit artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-windows
        path: |
          ${{github.workspace}}\assets
          ${{github.workspace}}\build\Debug
