name: Building, CI Even

on:
  workflow_dispatch:
  push:
    branches: [ "cmake" ]

env:
  CMAKE_BUILD_TYPE: Debug

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Apt - Install uncompileable dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install --no-install-recommends -y libglfw3-dev libcdd-dev libglm-dev
    
    - name: Cache - imgui from source
      id: cache-imgui
      uses: actions/cache@v3.0.11
      with:
        key: version-1.88
        path: thirdparty/imgui
    
    # Could also just use CMake for downloading the archives, but cache is still needed
    - name: Retrieve - imgui from source
      if: ${{ steps.cache-imgui.outputs.cache-hit != 'true' }}
      run: |
        curl -sSL https://github.com/ocornut/imgui/archive/refs/tags/v1.88.zip -o /tmp/imgui.zip
        unzip /tmp/imgui.zip -d ./thirdparty
        mv ./thirdparty/imgui-1.88 ./thirdparty/imgui

    # Shamelessly borrowed from an example CMake action. Probably better than I could've done myself
    # ..evidently
    - name: CMake - configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}}
    - name: CMake - build
      run: cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}

    - name: Tar - Package artifact
      run: |
        cmake --install ${{github.workspace}}/build
        tar -cvf ${{github.workspace}}/dist-linux.tar -C ${{github.workspace}} ./dist
    - name: Actions - Emit artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-linux
        path: ${{github.workspace}}/dist-linux.tar

  build-windows:
    runs-on: windows-latest
    
    # vcpkg install glfw3 glm
    # pacman -Suy glfw3 glm
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: vcpkg - Install dependencies
      run: |
        vcpkg install glfw3 glm

    - name: CMake - configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DUSE_CDDLIB=off -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_INSTALLATION_ROOT }}/scripts/buildsystems/vcpkg.cmake
    - name: CMake - build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.CMAKE_BUILD_TYPE}}
        cmake --install ${{github.workspace}}/build

    - name: Actions - Emit artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist/
